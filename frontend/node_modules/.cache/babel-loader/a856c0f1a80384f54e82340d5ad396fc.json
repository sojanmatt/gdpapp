{"ast":null,"code":"var _jsxFileName = \"/Users/mathewsojan/SoftwareEngineering/Internship/LAM/gdpApp/gdpapp/Frontend/src/components/ResponsiveWrapper/ResponsiveWrapper.jsx\";\nimport React, { Component } from \"react\";\nexport default (ChartComponent => class ResponsiveChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerWidth: null\n    };\n    this.fitParentContainer = this.fitParentContainer.bind(this);\n  }\n\n  componentDidMount() {\n    this.fitParentContainer();\n    window.addEventListener(\"resize\", this.fitParentContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.fitParentContainer);\n  }\n\n  fitParentContainer() {\n    const containerWidth = this.state.containerWidth;\n    const currentContainerWidth = this.chartContainer.getBoundingClientRect().width;\n    const shouldResize = containerWidth !== currentContainerWidth;\n\n    if (shouldResize) {\n      this.setState({\n        containerWidth: currentContainerWidth\n      });\n    }\n  }\n\n  renderChart() {\n    const parentWidth = this.state.containerWidth;\n    return React.createElement(ChartComponent, Object.assign({}, this.props, {\n      parentWidth: parentWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const containerWidth = this.state.containerWidth;\n    const shouldRenderChart = containerWidth !== null;\n    return React.createElement(\"div\", {\n      ref: el => {\n        this.chartContainer = el;\n      },\n      className: \"Responsive-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, shouldRenderChart && this.renderChart());\n  }\n\n});","map":{"version":3,"sources":["/Users/mathewsojan/SoftwareEngineering/Internship/LAM/gdpApp/gdpapp/Frontend/src/components/ResponsiveWrapper/ResponsiveWrapper.jsx"],"names":["React","Component","ChartComponent","ResponsiveChart","constructor","props","state","containerWidth","fitParentContainer","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","currentContainerWidth","chartContainer","getBoundingClientRect","width","shouldResize","setState","renderChart","parentWidth","render","shouldRenderChart","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,gBAAeC,cAAc,IAC3B,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAIA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,kBAAL;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,kBAAvC;AACD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKN,kBAA1C;AACD;;AAEDA,EAAAA,kBAAkB,GAAG;AAAA,UACXD,cADW,GACQ,KAAKD,KADb,CACXC,cADW;AAEnB,UAAMQ,qBAAqB,GAAG,KAAKC,cAAL,CAAoBC,qBAApB,GAC3BC,KADH;AAGA,UAAMC,YAAY,GAAGZ,cAAc,KAAKQ,qBAAxC;;AAEA,QAAII,YAAJ,EAAkB;AAChB,WAAKC,QAAL,CAAc;AACZb,QAAAA,cAAc,EAAEQ;AADJ,OAAd;AAGD;AACF;;AAEDM,EAAAA,WAAW,GAAG;AACZ,UAAMC,WAAW,GAAG,KAAKhB,KAAL,CAAWC,cAA/B;AAEA,WAAO,oBAAC,cAAD,oBAAoB,KAAKF,KAAzB;AAAgC,MAAA,WAAW,EAAEiB,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACChB,cADD,GACoB,KAAKD,KADzB,CACCC,cADD;AAEP,UAAMiB,iBAAiB,GAAGjB,cAAc,KAAK,IAA7C;AAEA,WACE;AACE,MAAA,GAAG,EAAEkB,EAAE,IAAI;AACT,aAAKT,cAAL,GAAsBS,EAAtB;AACD,OAHH;AAIE,MAAA,SAAS,EAAC,oBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGD,iBAAiB,IAAI,KAAKH,WAAL,EANxB,CADF;AAUD;;AAtDqC,CAD1C","sourcesContent":["import React, { Component } from \"react\";\n\nexport default ChartComponent =>\n  class ResponsiveChart extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        containerWidth: null\n      };\n\n      this.fitParentContainer = this.fitParentContainer.bind(this);\n    }\n\n    componentDidMount() {\n      this.fitParentContainer();\n      window.addEventListener(\"resize\", this.fitParentContainer);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.fitParentContainer);\n    }\n\n    fitParentContainer() {\n      const { containerWidth } = this.state;\n      const currentContainerWidth = this.chartContainer.getBoundingClientRect()\n        .width;\n\n      const shouldResize = containerWidth !== currentContainerWidth;\n\n      if (shouldResize) {\n        this.setState({\n          containerWidth: currentContainerWidth\n        });\n      }\n    }\n\n    renderChart() {\n      const parentWidth = this.state.containerWidth;\n\n      return <ChartComponent {...this.props} parentWidth={parentWidth} />;\n    }\n\n    render() {\n      const { containerWidth } = this.state;\n      const shouldRenderChart = containerWidth !== null;\n\n      return (\n        <div\n          ref={el => {\n            this.chartContainer = el;\n          }}\n          className=\"Responsive-wrapper\"\n        >\n          {shouldRenderChart && this.renderChart()}\n        </div>\n      );\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}